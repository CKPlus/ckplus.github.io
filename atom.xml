<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>CKPlus&#39;s Blog</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://ckplus.github.io/"/>
  <updated>2016-07-28T05:55:41.000Z</updated>
  <id>http://ckplus.github.io/</id>
  
  <author>
    <name>Eric Yu</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SSH Tunnel 設定</title>
    <link href="http://ckplus.github.io/2016/07/18/ssh-tunnel/"/>
    <id>http://ckplus.github.io/2016/07/18/ssh-tunnel/</id>
    <published>2016-07-18T08:41:02.000Z</published>
    <updated>2016-07-28T05:55:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>有的時候因為 MySQL, Redis 放在 VPC 內，</p>
<p>會讓 local 開發變得很困難，還要自己裝這些 service，</p>
<p>不然就是要在裡面開機器開發。</p>
<p>不熟 Vim 的話就有頗痛苦！</p>
<p>所以可以透過下面這招，用 ssh tunnel 來做 port forwarding</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ssh -fNL 6379:&lt;redis_host&gt;:6379 &lt;username&gt;@tunnel.com</div></pre></td></tr></table></figure>
<p>這就可以把 Redis default 的 6379 port 轉進來囉！</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;有的時候因為 MySQL, Redis 放在 VPC 內，&lt;/p&gt;
&lt;p&gt;會讓 local 開發變得很困難，還要自己裝這些 service，&lt;/p&gt;
&lt;p&gt;不然就是要在裡面開機器開發。&lt;/p&gt;
&lt;p&gt;不熟 Vim 的話就有頗痛苦！&lt;/p&gt;
&lt;p&gt;所以可以透過下面這招，用 s
    
    </summary>
    
      <category term="linux" scheme="http://ckplus.github.io/categories/linux/"/>
    
    
      <category term="linux" scheme="http://ckplus.github.io/tags/linux/"/>
    
      <category term="ssh" scheme="http://ckplus.github.io/tags/ssh/"/>
    
  </entry>
  
  <entry>
    <title>ES Sharding 問題集</title>
    <link href="http://ckplus.github.io/2016/07/04/es-shard/"/>
    <id>http://ckplus.github.io/2016/07/04/es-shard/</id>
    <published>2016-07-04T06:26:02.000Z</published>
    <updated>2016-07-28T05:55:41.000Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Disk-based-Shard-Allocation"><a href="#Disk-based-Shard-Allocation" class="headerlink" title="Disk-based Shard Allocation"></a>Disk-based Shard Allocation</h1><hr>
<p>上週公司的 ES cluster 炸裂，才發現一個有趣的問題。</p>
<p>一度以為是 index 過多所以才掛 shard 緩慢，但我想錯了！</p>
<p>就是當 ES Cluster 在分 shard 的時候，要是 data node 的 disk space 不夠會無法繼續分，</p>
<p>造成 shard 掛不回去。</p>
<p>以下兩個參數是控制關鍵。</p>
<p><code>cluster.routing.allocation.disk.watermark.low</code></p>
<p>控制 disk space 的低標。預設 85%，要是超過 85%，則不會再把 shard 分到這個 node 上。</p>
<p><code>cluster.routing.allocation.disk.watermark.high</code></p>
<p>控制 disk space 的高標。預設 90%，要是超過 90%，es 會嘗試把 shard 掛到其他 node 上。</p>
<p><a href="https://www.elastic.co/guide/en/elasticsearch/reference/current/disk-allocator.html" target="_blank" rel="external">ES 官網參考文件</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Disk-based-Shard-Allocation&quot;&gt;&lt;a href=&quot;#Disk-based-Shard-Allocation&quot; class=&quot;headerlink&quot; title=&quot;Disk-based Shard Allocation&quot;&gt;&lt;/a&gt;Disk-
    
    </summary>
    
      <category term="elasticsearch" scheme="http://ckplus.github.io/categories/elasticsearch/"/>
    
    
      <category term="elasticsearch" scheme="http://ckplus.github.io/tags/elasticsearch/"/>
    
      <category term="es" scheme="http://ckplus.github.io/tags/es/"/>
    
      <category term="shard" scheme="http://ckplus.github.io/tags/shard/"/>
    
  </entry>
  
  <entry>
    <title>透過 Virtualenv 建立 Python 開發環境</title>
    <link href="http://ckplus.github.io/2016/07/04/venv/"/>
    <id>http://ckplus.github.io/2016/07/04/venv/</id>
    <published>2016-07-04T06:26:02.000Z</published>
    <updated>2016-07-28T05:55:41.000Z</updated>
    
    <content type="html"><![CDATA[<p>在設定 Python 開發環境的時候，為了避免各專案之間的 module 互相干擾，把系統的 pip 裝了一堆不同版本的 libs，會利用 virtualenv 來打造獨立的專案運行環境。</p>
<h1 id="Mac-的安裝方式"><a href="#Mac-的安裝方式" class="headerlink" title="Mac 的安裝方式"></a>Mac 的安裝方式</h1><ol>
<li>透過 Brew 安裝 Python2</li>
</ol>
<figure class="highlight plain"><figcaption><span>brew install python```</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">2. 透過 pip 安裝 virtualenv</div><div class="line"></div><div class="line">```$ pip install virtualenv</div></pre></td></tr></table></figure>
<p>然後你就得到 virtualenv 了！</p>
<ol>
<li>初始化 Virtualenv (通常會在專案目錄內建立)</li>
</ol>
<figure class="highlight plain"><figcaption><span>virtualenv venv ```</span></figcaption><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"></div><div class="line">4. 進入 venv 的環境</div><div class="line"></div><div class="line">```$ source venv/bin/activate</div></pre></td></tr></table></figure>
<p>接下來我會習慣在每個 Python 專案內，把他的 pip-requirements.txt 寫好<br>比如說這樣</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">boto==2.13.0</div><div class="line">Django==1.9.1</div></pre></td></tr></table></figure>
<p>就可以透過下面的指令把專案用到的套件裝起來，<br>這樣就不會干擾到系統內的 pip 啦！</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">pip install -r pip-requirements.txt</div></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在設定 Python 開發環境的時候，為了避免各專案之間的 module 互相干擾，把系統的 pip 裝了一堆不同版本的 libs，會利用 virtualenv 來打造獨立的專案運行環境。&lt;/p&gt;
&lt;h1 id=&quot;Mac-的安裝方式&quot;&gt;&lt;a href=&quot;#Mac-的安裝方式
    
    </summary>
    
      <category term="python" scheme="http://ckplus.github.io/categories/python/"/>
    
    
      <category term="python" scheme="http://ckplus.github.io/tags/python/"/>
    
      <category term="virtualenv" scheme="http://ckplus.github.io/tags/virtualenv/"/>
    
  </entry>
  
</feed>
